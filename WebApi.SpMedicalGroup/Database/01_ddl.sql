CREATE DATABASE SpMedicalGroup;
GO

USE SpMedicalGroup;
GO

CREATE TABLE TiposUsuarios (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	Nome VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Usuarios (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	Email VARCHAR(255) UNIQUE NOT NULL,
	Senha VARCHAR(255) NOT NULL,
	TipoUsuarioId INT FOREIGN KEY REFERENCES TiposUsuarios(Id) NOT NULL
);

CREATE TABLE Prontuarios (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	Nome VARCHAR(255) NOT NULL,
	Rg CHAR(14) UNIQUE NOT NULL,
	Cpf CHAR(11) UNIQUE NOT NULL,
	DataNascimento DATE NOT NULL,
	Telefone VARCHAR(20),
	Rua VARCHAR(255) NOT NULL, 
	Bairro VARCHAR(255),
	Cidade VARCHAR(255) NOT NULL,
	Estado CHAR(2) NOT NULL,
	Cep CHAR(9) UNIQUE NOT NULL,
	UsuarioId INT FOREIGN KEY REFERENCES Usuarios(Id) NOT NULL
);

CREATE TABLE Clinicas (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	NomeFantasia VARCHAR(255) UNIQUE NOT NULL,
	RazaoSocial VARCHAR(255),
	HorarioFuncionamento VARCHAR(255) NOT NULL,
	Cnpj CHAR(18) NOT NULL,
	Rua VARCHAR(255) NOT NULL,
	Bairro VARCHAR(255),
	Cidade VARCHAR(250) NOT NULL,
	Estado CHAR(2) NOT NULL,
	Cep CHAR(9) UNIQUE NOT NULL
);

CREATE TABLE Especialidades (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	Nome VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Medicos (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	Nome VARCHAR(255) NOT NULL,
	Crm VARCHAR(255) UNIQUE NOT NULL, 
	EspecialidadeId INT FOREIGN KEY REFERENCES Especialidades(Id) NOT NULL,
	UsuarioId INT FOREIGN KEY REFERENCES Usuarios(Id) NOT NULL,
	ClinicaId INT FOREIGN KEY REFERENCES Clinicas(Id) NOT NULL
);

CREATE TABLE Situacoes (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	Nome VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Consultas (
	Id INT PRIMARY KEY IDENTITY NOT NULL,
	ProntuarioId INT FOREIGN KEY REFERENCES Prontuarios(Id) NOT NULL,
	MedicoId INT FOREIGN KEY REFERENCES Medicos(Id) NOT NULL,
	DataAgendada DATE NOT NULL,
	HoraAgendada TIME NOT NULL,
	SituacaoId INT FOREIGN KEY REFERENCES Situacoes(Id) DEFAULT 1,
	Descricao TEXT
);

--- INDICES

CREATE NONCLUSTERED INDEX IDX_Prontuarios_Cpf ON Prontuarios (Cpf);
GO

CREATE NONCLUSTERED INDEX IDX_Usuarios_Email ON Usuarios (Email);
GO

CREATE NONCLUSTERED INDEX IDX_Medicos_Crm ON Medicos (Crm);
GO

CREATE NONCLUSTERED INDEX IDX_Consultas_ProntuarioId ON Consultas (ProntuarioId);
GO

CREATE NONCLUSTERED INDEX IDX_Consultas_Medicoid ON Consultas (MedicoId);
GO

CREATE NONCLUSTERED INDEX IDX_Consultas_Data ON Consultas (DataAgendada);
GO 

--- FUNCTIONS

--- RETORNA A QUANTIDADE DE MEDICOS QUE TEM AQUELA ESPECIALIDADE
CREATE FUNCTION dbo.QUANT_MED_ESP(@EspecialidadeId INT) RETURNS TABLE AS RETURN
SELECT COUNT(Id) AS QUANT_MEDI_ESPECI FROM Medicos AS M WHERE M.EspecialidadeId = @EspecialidadeId;
GO

--- RETORNA OS MEDICOS COM TEM AQUELA ESPECIALIDADE
CREATE FUNCTION MED_ESP(@EspecialidadeId INT) RETURNS TABLE AS RETURN
SELECT * FROM Medicos WHERE EspecialidadeId = @EspecialidadeId;
GO

--- PROCEDURE

--- CALCULA A IDADE DE UM PACIENTE USANDO PROCEDURE
CREATE PROCEDURE Idade_DataNascimento @DataNascimento DATE AS 
SELECT DATEDIFF(MONTH, @DataNascimento, GETDATE())/12 AS Idade;
GO